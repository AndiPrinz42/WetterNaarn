---
interface Props {
  name: string;
  value: string;
  text: string;
  rotation: number;
}
const { name, value, text, rotation } = Astro.props;
import svg from "/public/assets/icons/meteocons/rotateable/barometer.svg?raw";
---

<div id="sensorWidgetWind">
  <div id="wrapper" style=`--rotationDeg: ${rotation}deg`>
    <div id="left">
      <div id="name">
        {name}
      </div>
      <div id="text">
        {text}
      </div>
      <div id="value">
        {value}
      </div>
    </div>
    <div id="right">
      <div id="icon">
        <Fragment set:html={svg} />
      </div>
    </div>
  </div>
</div>

<style lang="scss" is:inline>
  #icon #rotateElement {
    transform-origin: 50% 50%;
    transform: rotate(var(--rotationDeg));
  }
</style>

<style lang="scss">
  $contrast_color: #808080;
  $background: #ecf3f8;

  #sensorWidgetWind {
    height: 100%;
    box-sizing: border-box;
    background-color: $background;
    border-radius: 1em;
    padding: 1.6em;
    #wrapper {
      display: flex;
      flex-direction: row;
      width: 100%;
      height: 100%;
      #right {
        #icon {
          height: 6em;
          width: 6em;
          @media (max-width: 420px) {
            height: 5em;
            width: 5em;
          }
        }
        flex: 1;
        display: flex;
        justify-content: flex-end;
        align-items: center;
      }
      #left {
        display: flex;
        flex-direction: column;
        justify-content: center;
        #name {
          font-size: 1.5em;
          font-weight: 400;
          margin-bottom: 0.7em;
        }
        #text {
          font-size: 1.2em;
          font-weight: 400;
          margin-bottom: 0.8em;
          color: $contrast_color;
        }
        #value {
          font-size: 1.5em;
          font-weight: 400;
        }
      }
    }
  }

</style>
