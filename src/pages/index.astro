---
import Layout from "../layouts/Layout.astro";
import SensorWidget from "../components/SensorWidget.astro";
import SensorWidgetRotateable from "../components/SensorWidgetRotateable.astro";
import SunWidget from "../components/SunWidget.astro";

const data = {
  date: "Heute 20:30",
  outTemp: "20",
  condition: "Sonnig",
  icon: "01d",
  forecasttoday: {
    minTemp: "15",
    maxTemp: "25",
  },
  appTemp: "22",
  morningtemp: "15",
  noontemp: "20",
  eveningtemp: "18",
  nighttemp: "12",
  forecastin1d: {
    name: "Morgen",
    date: "13. Mai 2021",
    minTemp: "14",
    maxTemp: "24",
    icon: "02d",
    condition: "Wolkig",
  },
  forecastin2d: {
    name: "Freitag",
    date: "14. Mai 2021",
    minTemp: "13",
    maxTemp: "23",
    icon: "03d",
    condition: "Bewölkt",
  },
  forecastin3d: {
    name: "Samstag",
    date: "15. Mai 2021",
    minTemp: "12",
    maxTemp: "22",
    icon: "04d",
    condition: "Bewölkt",
  },
  forecastin4d: {
    name: "Sonntag",
    date: "16. Mai 2021",
    minTemp: "11",
    maxTemp: "21",
    icon: "09d",
    condition: "Regen",
  },
  outHumidity: "50",
  barometer: "1013",
  windspeed: "10",
  winddir: "180",
  rain: "0",
  moonillumination: "50",
  sunrise: "05:30",
  sunset: "20:30",
};
const humidityText = "hoch";

const barometerText = "normal";
const barometerIcon =
  "assets/icons/meteocons/static/sensors/barometer/barometer.svg";
const moonIcon = "assets/icons/meteocons/static/moon/moon-waxing-gibbous.svg";
const moonPhase = "zunehmend";

const windText = "leichter Zug";
---

<Layout title="Dashboard | Wetter Naarn">
  <div id="content">
    <section id="mainWidgetWrapper">
      <h2>Aktuelle Werte</h2>
      <div
        id="mainWidget"
        class="widget"
        style=`background-image: url(assets/backgrounds/${data.icon}.jpg)`
      >
        <div>
          <div id="rowSplitter">
            <div id="row1">
              <span class="stationtext">Wetter Naarn</span>
              <span class="date">{data.date}</span>
            </div>
            <div id="row2">
              <div id="currentWrapper">
                <div id="currentTemp">
                  {data.outTemp}<span id="degreesymbol">°</span>
                </div>
                <div id="currentCondition">{data.condition}</div>
              </div>
            </div>
            <div id="row3">
              <span id="maxmintemp"
                >{data.forecasttoday.minTemp}°/{
                  data.forecasttoday.maxTemp
                }°</span
              >
              <span id="feelsliketemp">
                <img
                  src="assets/icons/temperaturefeelslike.svg"
                  alt="Gefühlte Temperatur Icon"
                />
                <div>{data.appTemp}°</div>
              </span>
            </div>
          </div>
        </div>
        <div id="tempchartwrapper">
          <div id="tempchart">
            <div id="temptextheader">Prognose heute</div>
            <div id="daytempchart-outer-container">
              <div id="daytempchart-middle-container">
                <div id="daytempchart-inner-container">
                  <canvas id="daytempchart"></canvas>
                </div>
              </div>
            </div>
            <div>
              <div id="charttext">
                <div class="daytime">Morgen</div>
                <div class="daytime">Mittag</div>
                <div class="daytime">Abend</div>
                <div class="daytime">Nacht</div>
                <div class="temp">{data.morningtemp}°</div>
                <div class="temp">{data.noontemp}°</div>
                <div class="temp">{data.eveningtemp}°</div>
                <div class="temp">{data.nighttemp}°</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section id="forecastWidgetWrapper">
      <h2>Vorhersage</h2>
      <div id="forecastWidget" class="widget">
        <div id="forecastdays">
          <div class="day">
            <span class="week">{data.forecastin1d.name}</span>
            <span class="date">{data.forecastin1d.date}</span>
          </div>
          <div class="maxmintemp">
            <span
              >{data.forecastin1d.minTemp}°/{data.forecastin1d.maxTemp}°</span
            >
          </div>
          <div class="condition" *ngIf="data.forecastin1d.icon !== ''">
            <img
              src=`/assets/icons/meteocons/static/conditions/${data.forecastin1d.icon}.svg`
              alt={data.forecastin1d.condition}
              class="icon"
            />
          </div>

          <div class="day">
            <span class="week">{data.forecastin2d.name}</span>
            <span class="date">{data.forecastin2d.date}</span>
          </div>
          <div class="maxmintemp">
            <span
              >{data.forecastin2d.minTemp}°/{data.forecastin2d.maxTemp}°</span
            >
          </div>
          <div class="condition" *ngIf="data.forecastin2d.icon !== ''">
            <img
              src=`/assets/icons/meteocons/static/conditions/${data.forecastin2d.icon}.svg`
              alt={data.forecastin2d.condition}
              class="icon"
            />
          </div>

          <div class="day">
            <span class="week">{data.forecastin3d.name}</span>
            <span class="date">{data.forecastin3d.date}</span>
          </div>
          <div class="maxmintemp">
            <span
              >{data.forecastin3d.minTemp}°/{data.forecastin3d.maxTemp}°</span
            >
          </div>
          <div class="condition" *ngIf="data.forecastin3d.icon !== ''">
            <img
              src=`/assets/icons/meteocons/static/conditions/${data.forecastin3d.icon}.svg`
              alt={data.forecastin3d.condition}
              class="icon"
            />
          </div>

          <div class="day last">
            <span class="week">{data.forecastin4d.name}</span>
            <span class="date">{data.forecastin4d.date}</span>
          </div>
          <div class="maxmintemp last">
            <span
              >{data.forecastin4d.minTemp}°/{data.forecastin4d.maxTemp}°</span
            >
          </div>
          <div class="condition last" *ngIf="data.forecastin4d.icon !== ''">
            <img
              src=`/assets/icons/meteocons/static/conditions/${data.forecastin4d.icon}.svg`
              alt={data.forecastin4d.condition}
              class="icon"
            />
          </div>
        </div>
      </div>
    </section>

    <h2 id="sensorheader">Sensoren</h2>
    <SensorWidget
      name="Luftfeuchte"
      text=`${humidityText}`
      value=`${data.outHumidity}%`
      icon="assets/icons/meteocons/static/sensors/humidity.svg"
      iconAlt="Luftfeuchte Icon"
    />

    <SensorWidget
      name="Luftdruck"
      text=`${barometerText}`
      value=`${data.barometer}hPa`
      icon=`${barometerIcon}`
      iconAlt="Luftfeuchte Icon"
    />

    <SensorWidgetRotateable
      name="Wind"
      text=`${windText}`
      value=`${data.windspeed}km/h`
      rotation=`${data.winddir}`
    >
      <!--?xml version="1.0" encoding="UTF-8"?-->
      <svg
        id="Layer_1"
        data-name="Layer 1"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink"
        viewBox="0 0 300 300"
      >
        <defs>
          <linearGradient
            id="linear-gradient"
            x1="77.98"
            y1="803.27"
            x2="222.02"
            y2="1052.73"
            gradientTransform="translate(0 -778)"
            gradientUnits="userSpaceOnUse"
          >
            <stop offset="0" stop-color="#6b7280"></stop>
            <stop offset=".5" stop-color="#6b7280"></stop>
            <stop offset="1" stop-color="#374151"></stop>
          </linearGradient>
        </defs>
        <circle
          cx="150"
          cy="150"
          r="144"
          style="fill: url(#linear-gradient); stroke: #e5e7eb; stroke-miterlimit: 10; stroke-width: 12px;"
        ></circle>
        <path
          d="m153.2,46v-10.4h4.6v18h-4.7l-6.3-10.4v10.4h-4.6v-18h4.7l6.3,10.4Zm103.3,105.7v3.3h9.8v4h-14.5v-18h14.2v4h-9.5v3h8.3v3.8l-8.3-.1Zm-106.4,116c-1.9.1-3.8-.5-5.4-1.6-1.3-1.1-2-2.7-2-4.4h4.4c0,1.6,1.1,2.4,3.1,2.4,1.8,0,2.6-.6,2.6-1.7,0-.4-.1-.7-.4-1-.5-.3-1-.6-1.6-.7l-3.4-.7c-2.9-.7-4.4-2.4-4.4-4.9,0-1.5.6-2.9,1.7-3.9,1.5-1.1,3.3-1.6,5.1-1.5,1.8-.1,3.5.5,5,1.5,1.2,1,2,2.4,2,4h-4.3c-.2-1.4-1-2-2.7-2-.6,0-1.1.1-1.6.4-.3.2-.6.6-.6,1,0,.8.5,1.3,1.6,1.6l3.5.8c3.1.7,4.7,2.4,4.7,5.1,0,1.6-.7,3.1-2,4.1-1.6,1.1-3.4,1.6-5.3,1.5h0Zm-99.9-118.7l2-8h4.7l-5.2,18h-4.5l-2.5-11.5-2.3,11.5h-4.6l-5.2-18h4.7l2,8,.9,4.2.7-4.3,1.7-7.9h4.4l1.8,8,.6,4.1.8-4.1Z"
          style="fill: #9ca3af; stroke-width: 0px;"></path>
        <g id="rotateElement">
          <path
            d="m150.1,66l-22.2,77.8-.9,6.2h46.1l-.8-6.1-.3-1.2-21.9-76.7Z"
            style="fill: #ef4444; stroke-width: 0px;"></path>
          <circle
            cx="150.1"
            cy="150"
            r="23.1"
            style="fill: #ef4444; stroke-width: 0px;"></circle>
        </g>
      </svg>
    </SensorWidgetRotateable>

    <SensorWidget
      name="Regen"
      text="Heutiger Regen"
      value=`${data.rain}mm²`
      icon="assets/icons/meteocons/static/sensors/raindrops.svg"
      iconAlt="Regen Icon"
    />

    <SensorWidget
      name="Mond"
      text=`${moonPhase}`
      value=`${data.moonillumination}%`
      icon=`${moonIcon}`
      iconAlt="Mondphase Icon"
    />

    <SunWidget
      name="Sonne"
      sunriseIcon="assets/icons/meteocons/static/sun/sunrise.svg"
      sunriseIconAlt="Sonnenaufgang Icon"
      sunriseTime=`${data.sunrise}`
      sunsetIcon="assets/icons/meteocons/static/sun/sunset.svg"
      sunsetIconAlt="Sonnenuntergang Icon"
      sunsetTime=`${data.sunset}`
    />

    <app-widget-sensor-sun
      class="sensor"
      [name]="'Sonne'"
      [sunriseIcon]="'/assets/icons/meteocons/static/sun/sunrise.svg'"
      [sunriseIconAlt]="'Sonnenaufgang Icon'"
      [sunriseTime]="data.sunrise"
      [sunsetIcon]="'/assets/icons/meteocons/static/sun/sunset.svg'"
      [sunsetIconAlt]="'Sonnenuntergang Icon'"
      [sunsetTime]="data.sunset"></app-widget-sensor-sun>
  </div>
</Layout>

<style lang="scss">
  @use "../styles/mixins" as global;

  $main_color: #ffffff;
  $contrast_color: #808080;
  $forecast_background: #f7f7f7;
  $chart_background: rgba(255, 255, 255, 0.1);

  #content {
    padding: 0.5em 2em 1.2em 2em;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: auto 1fr 1fr;
    grid-gap: 1.5em;

    @media (max-height: 1000px) {
      min-height: calc(100vh - 1.7em);
    }

    @media (max-width: 1250px) {
      margin-left: 0;
      margin-top: 3.75em;
    }

    @media (max-width: 1030px) {
      grid-template-rows: auto auto auto;
      margin-top: 3.75em;
      grid-template-columns: 1fr;
    }

    @media (max-width: 420px) {
      padding: 0.5em 1em 1.2em 1em;
    }

    @media (max-width: 310px) {
      padding: 0.5em 0.2em 1.2em 0.1em;
    }

    h2 {
      font-size: 2em;
      font-weight: 500;
      margin-bottom: 0.2em;
    }

    .widget {
      padding: 1.5em;
      border-radius: 1em;

      @media (max-width: 420px) {
        padding: 1em;
      }
    }

    #sensorheader {
      margin-bottom: -0.5em;

      @media (min-width: 951px) {
        display: none;
      }
    }

    #mainWidgetWrapper {
      grid-column: 1 / span 2;

      @media (max-width: 1030px) {
        grid-column: 1 / span 1;
      }

      #mainWidget {
        background-position: center;
        background-size: cover;
        height: calc(100% - 6.4em);
        min-height: 20em;
        color: $main_color;
        display: flex;
        flex-direction: row;

        @media (max-width: 1030px) {
          min-height: 0;
        }

        @media (max-width: 800px) {
          flex-direction: column;
          height: fit-content;
        }

        div {
          flex: 1;
        }

        #rowSplitter {
          display: flex;
          flex-direction: column;
          height: 100%;

          #row1 {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            flex: 2;
            margin-bottom: 1em;

            .stationtext {
              font-size: 1.6em;
              font-weight: 500;

              @media (max-width: 420px) {
                font-size: 1.3em;
              }
            }

            .date {
              font-size: 1.1em;
              font-weight: 300;

              @media (max-width: 420px) {
                font-size: 0.9em;
              }
            }
          }

          #row2 {
            flex: 12;
            display: flex;
            align-items: center;
          }

          #row3 {
            flex: 2;
            font-size: 2em;
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            font-weight: 300;

            @media (max-width: 420px) {
              margin-top: 0.5em;
              font-size: 1.6em;
            }

            #feelsliketemp {
              display: flex;
              align-items: center;

              #feelslikeicon {
                margin-right: 0.2em;
                height: 0.85em;
                @include global.disableSelect;
                @include global.disableDrag;
              }
            }
          }
        }

        #chartwrapper {
          height: 15em;
          width: 100%;
          background-color: $chart_background;
        }

        #currentTemp {
          font-size: 9em;
          line-height: 1;
          transform: translateX(0.05em);

          @media (max-width: 420px) {
            font-size: 7em;
          }

          #degreesymbol {
            font-size: 0.3em;
            vertical-align: top;
          }
        }

        #currentCondition {
          font-size: 1.25em;
          height: 1.25em !important;

          @media (max-width: 420px) {
            font-size: 1em;
          }
        }

        #currentWrapper {
          text-align: center;
        }
      }
    }

    #forecastWidgetWrapper {
      height: 100%;

      #forecastWidget {
        background-color: $forecast_background;
        height: calc(100% - 3.8em);
        min-height: 20em;
        padding-top: 0.2em;
        padding-bottom: 0.2em;

        #forecastdays {
          display: grid;
          grid-template-columns: auto auto 4.5em;
          grid-template-rows: 1fr 1fr 1fr 1fr;
          height: 100%;

          .day {
            display: flex;
            flex-direction: column;
            justify-content: center;
            border-bottom: 1px solid #e0e0e0;

            .week {
              font-size: 1.1em;
              font-weight: 400;
            }

            .date {
              color: $contrast_color;
            }
          }

          .maxmintemp {
            display: flex;
            flex-direction: column;
            justify-content: center;
            border-bottom: 1px solid #e0e0e0;
            font-size: 1.4em;
            font-weight: 500;
          }

          .condition {
            display: flex;
            flex-direction: column;
            justify-content: center;
            border-bottom: 1px solid #e0e0e0;

            .icon {
              height: 3em;
              width: 4.5em;
              @include global.disableSelect;
              @include global.disableDrag;
            }
          }

          .day.last {
            border-bottom: none;
          }

          .maxmintemp.last {
            border-bottom: none;
          }

          .condition.last {
            border-bottom: none;
          }
        }

        .icon {
          height: 3em;
        }
      }
    }
  }

  #tempchartwrapper {
    display: flex;
    align-items: center;
    margin-left: 1.5em;
    backdrop-filter: blur(8px);
    background: rgba(215, 215, 215, 0.3);
    border-radius: 0.8em;

    @media (max-width: 800px) {
      display: none;
    }

    #tempchart {
      padding: 1em;

      #daytempchart-outer-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        overflow: hidden;

        #daytempchart-middle-container {
          width: 80%;

          #daytempchart-inner-container {
            #mainWidget {
              #daytempchart {
                height: 11.25em;
              }
            }
          }
        }
      }

      #charttext {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr 1fr;
        width: 100%;

        .daytime {
          text-align: center;
          font-size: 0.9em;
          font-weight: 400;
        }

        .temp {
          text-align: center;
          font-size: 1.2em;
          font-weight: 500;
        }
      }
    }

    #temptextheader {
      font-size: 1.3em;
      font-weight: 600;
      margin-bottom: 0.5em;
    }
  }
</style>
